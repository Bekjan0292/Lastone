import streamlit as st
import yfinance as yf
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Stock Analyzer",
    page_icon="üìä",
    layout="wide"
)

# –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é @st.cache_data
@st.cache_data
def get_stock_data(ticker):
    stock = yf.Ticker(ticker)
    return stock.info, stock.financials.T, stock.history(period="5y")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state –¥–ª—è —Ç–∏–∫–µ—Ä–∞ –∏ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if "ticker" not in st.session_state:
    st.session_state["ticker"] = ""
if "page" not in st.session_state:
    st.session_state["page"] = "Main"
if "stock_data" not in st.session_state:
    st.session_state["stock_data"] = None

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
def main_page():
    st.title("Stock Analyzer")
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ü–∏–∏ –∫–∞–∫ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ, —Ç–∞–∫ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏.")

    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–∏–∫–µ—Ä–∞
    ticker = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL, TSLA):", value=st.session_state["ticker"])
    st.session_state["ticker"] = ticker

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    col1, col2 = st.columns(2)
    with col1:
        if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É") and ticker:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ session_state
            st.session_state["stock_data"] = get_stock_data(ticker)
            st.session_state["page"] = "Fundamental"
    with col2:
        if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É") and ticker:
            st.session_state["stock_data"] = get_stock_data(ticker)
            st.session_state["page"] = "Technical"

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
def fundamental_analysis_page():
    st.title("–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
    if not st.session_state["stock_data"]:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä.")
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ session_state
    info, financials, history = st.session_state["stock_data"]

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏
    st.subheader(f"–ö–æ–º–ø–∞–Ω–∏—è: {info.get('longName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} ({st.session_state['ticker']})")
    st.write(f"**–°–µ–∫—Ç–æ—Ä:** {info.get('sector', 'N/A')} | **–û—Ç—Ä–∞—Å–ª—å:** {info.get('industry', 'N/A')}")

    # –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    st.subheader("–ö–ª—é—á–µ–≤—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
    metrics = {
        "–†—ã–Ω–æ—á–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è": f"${info.get('marketCap', 0):,}",
        "P/E (TTM)": info.get('forwardPE', 'N/A'),
        "–î–∏–≤–∏–¥–µ–Ω–¥–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å": f"{info.get('dividendYield', 0) * 100:.2f}%",
        "52-–Ω–µ–¥–µ–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º": f"${info.get('fiftyTwoWeekHigh', 'N/A')}",
        "52-–Ω–µ–¥–µ–ª—å–Ω—ã–π –º–∏–Ω–∏–º—É–º": f"${info.get('fiftyTwoWeekLow', 'N/A')}"
    }
    metrics_df = pd.DataFrame(metrics.items(), columns=["–ú–µ—Ç—Ä–∏–∫–∞", "–ó–Ω–∞—á–µ–Ω–∏–µ"])

    # –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Arrow, –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å—Ç—Ä–æ–∫–∏
    metrics_df["–ó–Ω–∞—á–µ–Ω–∏–µ"] = metrics_df["–ó–Ω–∞—á–µ–Ω–∏–µ"].astype(str)
    st.table(metrics_df)

    # –ì—Ä–∞—Ñ–∏–∫ "–í—ã—Ä—É—á–∫–∞ –∏ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å"
    st.subheader("–í—ã—Ä—É—á–∫–∞ –∏ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫)")
    try:
        financials = financials.rename(columns={"Total Revenue": "–í—ã—Ä—É—á–∫–∞", "Net Income": "–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å"})
        financials_chart = financials[["–í—ã—Ä—É—á–∫–∞", "–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å"]].reset_index()
        financials_chart = financials_chart.melt(id_vars="index", var_name="–ú–µ—Ç—Ä–∏–∫–∞", value_name="–°—É–º–º–∞")
        fig = px.line(
            financials_chart,
            x="index",
            y="–°—É–º–º–∞",
            color="–ú–µ—Ç—Ä–∏–∫–∞",
            title="–¢—Ä–µ–Ω–¥—ã –≤—ã—Ä—É—á–∫–∏ –∏ —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏",
            labels={"index": "–ì–æ–¥", "–°—É–º–º–∞": "–°—É–º–º–∞ (USD)"}
        )
        st.plotly_chart(fig)
    except Exception:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—ã—Ä—É—á–∫–µ –∏ –ø—Ä–∏–±—ã–ª–∏.")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
    st.subheader("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")
    recommendation = "–î–µ—Ä–∂–∞—Ç—å"
    pe = info.get("forwardPE", None)
    if pe:
        if pe < 15:
            recommendation = "–ü–æ–∫—É–ø–∞—Ç—å"
        elif pe > 25:
            recommendation = "–ü—Ä–æ–¥–∞–≤–∞—Ç—å"

    # –ì—Ä–∞—Ñ–∏–∫-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    fig = go.Figure(go.Indicator(
        mode="gauge+number",
        value=pe if pe else 20,
        title={"text": f"P/E Ratio ({recommendation})"},
        gauge={
            "axis": {"range": [0, 40]},
            "bar": {"color": "green" if recommendation == "–ü–æ–∫—É–ø–∞—Ç—å" else "red" if recommendation == "–ü—Ä–æ–¥–∞–≤–∞—Ç—å" else "yellow"}
        }
    ))
    st.plotly_chart(fig)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if st.button("–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"):
        st.session_state["page"] = "Main"

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä)
def technical_analysis_page():
    st.title("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑")
    st.write("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑.")

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if st.button("–ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"):
        st.session_state["page"] = "Main"

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
if st.session_state["page"] == "Main":
    main_page()
elif st.session_state["page"] == "Fundamental":
    fundamental_analysis_page()
elif st.session_state["page"] == "Technical":
    technical_analysis_page()
    
